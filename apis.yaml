openapi: 3.0.1
info:
  title: Backend Task API
  description: ""
  version: 1.0.0
servers:
  - url: "http://localhost:8000/"
tags:
  - name: auth
    description: APIs related to Auth Module
  - name: user
    description: APIs related to User Module
  - name: thought
    description: APIs related to Thought Module
  - name: reply
    description: APIs related to Reply Module
paths:
  /api/auth/register:
    post:
      tags:
        - auth
      summary: to signup a user
      description: to signup a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
              required:
                - email
                - username
                - password
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "409":
          description: User already registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/conflictResponse"
              example:
                isSuccess: false
                message: "conflict"
                code: 409
                data: {}
  /api/auth/login:
    post:
      tags:
        - auth
      summary: to signin using password
      description: to signin using password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usernameOrEmail:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "Not Found"
                code: 409
                data: {}
        "400":
          description: Wrong credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "bad request"
                code: 400
                data: {}
  /api/thought/all:
    get:
      tags:
        - thought
      summary: get list thoughts
      description: get list thoughts
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/conflictResponse"
              example:
                isSuccess: false
                message: "not found"
                code: 404
                data: null
        "400":
          description: Something wrong with token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "token wrong"
                code: 400
                data: null
        "401":
          description: Not Authorised
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "auth failure"
                code: 401
                data: null
  /api/thought:
    get:
      tags:
        - thought
      summary: get a thought
      description: get a thought
      security:
        - bearerAuth: []
      parameters:
        - name: thought_id
          in: query
          description: thought_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/conflictResponse"
              example:
                isSuccess: false
                message: "not found"
                code: 404
                data: null
        "400":
          description: Something wrong with token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "token wrong"
                code: 400
                data: null
        "401":
          description: Not Authorised
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "auth failure"
                code: 401
                data: null
    post:
      tags:
        - thought
      summary: to post a thought
      description: to post a thought
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                anoymous:
                  type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "Not Found"
                code: 409
                data: {}
        "400":
          description: Wrong credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "bad request"
                code: 400
                data: {}
    delete:
      tags:
        - thought
      summary: to delete a thought
      description: to delete a thought
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thought_id:
                  type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "Not Found"
                code: 409
                data: {}
        "400":
          description: Wrong credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "bad request"
                code: 400
                data: {}
  /api/reply:
    post:
      tags:
        - reply
      summary: to post a reply
      description: to post a reply
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                anoymous:
                  type: boolean
                thought_id:
                  type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "Not Found"
                code: 409
                data: {}
        "400":
          description: Wrong credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "bad request"
                code: 400
                data: {}
    delete:
      tags:
        - reply
      summary: to delete a reply
      description: to delete a reply
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thought_id:
                  type: string
                reply_id:
                  type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successResponse"
              example:
                isSuccess: true
                message: "success"
                code: 200
                data: {}
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internalFailureResponse"
              example:
                isSuccess: false
                message: "internal server error"
                code: 500
                data: {}
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authFailureResponse"
              example:
                isSuccess: false
                message: "Not Found"
                code: 409
                data: {}
        "400":
          description: Wrong credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/badRequestResponse"
              example:
                isSuccess: false
                message: "bad request"
                code: 400
                data: {}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    successResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        code:
          type: integer
        data:
          oneOf:
            - type: object
            - type: array
    internalFailureResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        code:
          type: integer
        data:
          type: object
    notFoundResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        code:
          type: integer
        data:
          type: object
    authFailureResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        code:
          type: integer
        data:
          type: object
    badRequestResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        code:
          type: integer
        data:
          type: object
    conflictResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        code:
          type: integer
        data:
          type: object
